@model AllArtistsQueryModel
@inject IOrganizerService organizers
@using Microsoft.AspNetCore.Identity
@using MusicEvents.Services.Organizers
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<form method="get">
  <div class="d-flex justify-content-center">

        <div class="form-group col-md-3 p-2">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" style="box-shadow: 0px 4px 5px  rgba(0, 0, 0, 0.2);" placeholder="Search..." />
        </div>

        <div class="form-group col-md-3 p-2">
            <div class="form-group">
                <label asp-for="CountryId"></label>
                <select asp-for="CountryId" class="form-control" style="box-shadow: 0px 4px 5px  rgba(0, 0, 0, 0.2);">
                    <option value="0" selected>All</option>
                    @foreach (var country in Model.Countries)
                    {
                        <option value=@country.Id>@country.CountryName</option>
                    }
                </select>
            </div>
        </div>

         <div class="form-group col-md-3 p-2">
            <div class="form-group">
                <label asp-for="GenreId"></label>
                <select asp-for="GenreId" class="form-control" style="box-shadow: 0px 4px 5px  rgba(0, 0, 0, 0.2);">
                    <option value=0>Choose</option>
                    @foreach (var genre in Model.Genres)
                    {
                        <option value=@genre.Id>@genre.GenreName</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3 p-2">
            <div class="form-group">
                <label asp-for="SortingType"></label>
                <select asp-for="SortingType" class="form-control" style="box-shadow: 0px 4px 5px  rgba(0, 0, 0, 0.2);">
                    <option value="0" selected>Newest</option>
                    <option value="1">Name</option>
                    <option value="2">Events</option>
                </select>
            </div>
        </div>


    </div>
</form>

<div class="row d-flex justify-content-center">
@foreach (var artists in Model.Artists)
{
   <div class="card mb-3 col-3 mx-5 mt-5 mb-5" style="padding-left: 1px;padding-right: 1px; width: 18rem; text-align:center; box-shadow: 0px 4px 5px  rgba(0, 0, 0, 0.2);">
      <img src="@artists.ImageUrl" class="card-img-top img-fluid" style="height:280px; width:auto;" alt="@artists.ArtistName picture">
      <div class="card-body">
        <h5>@artists.ArtistName</h5>
        <p class="card-text b ">@(string.IsNullOrEmpty(artists.Biography)? "This artist has no Biography yet. Ask an organizer to add one.": @artists.Biography)</p>
        <p class="card-text"><small class="text-muted">@artists.NumberOfEvents Events</small></p>

        <a asp-controller="Artists" asp-action="Details" asp-route-artistid="@artists.Id" class="btn  purple" style="margin-right: 4px;">Artist Profile</a>
                @if (SignInManager.IsSignedIn(User))
                {
                     @if (organizers.IsOrganizer(User.GetId()))
                     {
                        <a asp-controller="Artists" asp-action="Edit" asp-route-id="@artists.Id" class="btn  purple" style="margin-right: 4px;">Edit <i class="fa-solid fa-pen"></i></a>
	                    <a asp-controller="Artists" asp-action="Delete" asp-route-id="@artists.Id" class="btn btn-danger"><i class="fa-solid fa-trash-can"></i></a>
                     }
                    
                }

       
        
     
      </div>
    </div>
}
</div>



@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalArtists / AllArtistsQueryModel.ArtistsPerPage);
}

<div class="d-flex justify-content-center">

    <div class="col-md-3 text-center p-2">
        <a class="btn purple text-black @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Artists"
           asp-action="All"
           asp-route-genreId=@Model.GenreId
           asp-route-countryId=@Model.CountryId
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sortingType="@((int)Model.SortingType)"><i class="fa-solid fa-arrow-left"></i></a>
    </div>


     @if (SignInManager.IsSignedIn(User))
      {        
         @if (organizers.IsOrganizer(User.GetId()))
         {
             <div class="col-md-3 text-center p-2">
                 <a class="btn purple text-black" href="/Artists/Add">Add Artist</a>
             </div>
         }
      }


    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                     !Model.Artists.Any();
    }

    <div class="col-md-3 text-center p-2">
        <a class="btn text-black purple @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Artists"
           asp-action="All"
           asp-route-genreId=@Model.GenreId
           asp-route-countryId=@Model.CountryId
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sortingType="@((int)Model.SortingType)"><i class="fa-solid fa-arrow-right"></i></a>
    </div>
</div>
@if (!Model.Artists.Any())
{
    <h2 class="text-center my-3">No artists found by the given criteria!</h2>
}